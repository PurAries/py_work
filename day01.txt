为什么在程序中加入函数会有好处？
函数将代码划分为模块，提高了代码的可维护性和可读性。它们使代码重用更容易，并使程序结构更清晰。通过函数，可以将复杂的问题分解为较小的问题，简化编程任务。

函数中的代码何时执行：是在函数被定义时，还是在函数被调用时？
函数中的代码在函数被调用时执行，而不是在函数被定义时。

用什么语句创建一个函数？
在Python中，使用 def 语句来创建一个函数。例如：def my_function():

一个函数和一次函数调用有什么区别？
一个函数是代码块的定义，包括函数名、参数列表和函数体。一次函数调用是实际执行函数代码的动作，传递参数给函数并获取返回值。

Python程序中有多少全局作用域？有多少局部作用域？
Python程序中通常有一个全局作用域，它包括在全局范围内定义的变量。每次函数调用都会创建一个新的局部作用域，其中包括函数内部定义的变量。

当函数调用返回时，局部作用域中的变量发生了什么？
当函数调用返回时，局部作用域中的变量通常会被销毁，它们的值不再可用。

什么是返回值？返回值可以作为表达式的一部分吗？
返回值是函数执行完成后返回的值。是的，返回值可以作为表达式的一部分，可以与其他值进行操作和计算。

如果函数没有返回语句，对它进行调用的返回值是什么？
如果函数没有返回语句，Python会返回特殊的值 None。

如何强制函数中的一个变量引用是全局变量？
若要在函数中引用全局变量，需要在函数内部使用 global 关键字声明该变量。例如：global my_variable

None的数据类型是什么？
None 的数据类型是特殊的空值，它属于 NoneType。

import areallyourpetsnamederic语句做了什么？
import areallyourpetsnamederic 语句用于导入一个名为 areallyourpetsnamederic 的Python模块。

如果在名为spam的模块中有一个名为bacon()的函数，那在引入spam后，如何调用它？
可以使用 spam.bacon() 的方式来调用 bacon() 函数，前提是已经通过 import spam 导入了 spam 模块。

如何防止程序在遇到错误时崩溃？
可以使用异常处理（try...except）来捕获和处理程序中的错误，从而防止程序崩溃。这允许程序优雅地处理错误情况。

try子句中发生了什么？except子句中发生了什么？
在 try 子句中，程序尝试执行可能引发异常的代码。如果在 try 子句中发生异常，控制流将转到匹配的 except 子句，其中可以包含处理异常的代码块。这样可以避免异常导致程序崩溃。